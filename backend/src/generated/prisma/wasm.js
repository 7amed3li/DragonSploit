
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MembershipScalarFieldEnum = {
  id: 'id',
  role: 'role',
  createdAt: 'createdAt',
  userId: 'userId',
  organizationId: 'organizationId'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  email: 'email',
  role: 'role',
  status: 'status',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  organizationId: 'organizationId',
  invitedById: 'invitedById'
};

exports.Prisma.TargetScalarFieldEnum = {
  id: 'id',
  url: 'url',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.ScanScalarFieldEnum = {
  id: 'id',
  status: 'status',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  createdAt: 'createdAt',
  targetId: 'targetId',
  configurationId: 'configurationId'
};

exports.Prisma.VulnerabilityScalarFieldEnum = {
  id: 'id',
  type: 'type',
  severity: 'severity',
  description: 'description',
  proof: 'proof',
  isResolved: 'isResolved',
  foundAt: 'foundAt',
  scanId: 'scanId'
};

exports.Prisma.ScanConfigurationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isDiscoveryFocused: 'isDiscoveryFocused',
  isAiPowered: 'isAiPowered'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  format: 'format',
  storagePath: 'storagePath',
  createdAt: 'createdAt',
  scanId: 'scanId',
  organizationId: 'organizationId'
};

exports.Prisma.ApiTokenScalarFieldEnum = {
  id: 'id',
  name: 'name',
  token: 'token',
  permissions: 'permissions',
  lastUsedAt: 'lastUsedAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  organizationId: 'organizationId'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  action: 'action',
  details: 'details',
  ipAddress: 'ipAddress',
  createdAt: 'createdAt',
  userId: 'userId',
  organizationId: 'organizationId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER',
  BILLING_MANAGER: 'BILLING_MANAGER'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  EXPIRED: 'EXPIRED'
};

exports.ScanStatus = exports.$Enums.ScanStatus = {
  PENDING: 'PENDING',
  QUEUED: 'QUEUED',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELED: 'CANCELED'
};

exports.Severity = exports.$Enums.Severity = {
  INFO: 'INFO',
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  Membership: 'Membership',
  Invitation: 'Invitation',
  Target: 'Target',
  Scan: 'Scan',
  Vulnerability: 'Vulnerability',
  ScanConfiguration: 'ScanConfiguration',
  Report: 'Report',
  ApiToken: 'ApiToken',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Hp\\DragonSploit\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Hp\\DragonSploit\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// prisma/schema.prisma\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ========================================\n// 1. نماذج المصادقة وإدارة المستخدمين\n// ========================================\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  name      String?\n  password  String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // --- العلاقات ---\n  memberships Membership[] // المستخدم يمكن أن يكون عضوًا في عدة مساحات عمل\n  invitations Invitation[] @relation(\"UserInvitations\")\n  auditLogs   AuditLog[]\n}\n\nmodel Organization {\n  id        String   @id @default(cuid())\n  name      String\n  slug      String   @unique // رابط فريد للمنظمة مثل \"my-company\"\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // --- العلاقات ---\n  members     Membership[]\n  invitations Invitation[]\n  targets     Target[]\n  reports     Report[]\n  apiTokens   ApiToken[]\n  auditLogs   AuditLog[]\n}\n\nmodel Membership {\n  id        String   @id @default(cuid())\n  role      Role     @default(MEMBER)\n  createdAt DateTime @default(now())\n\n  // --- العلاقات ---\n  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId         String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  organizationId String\n\n  @@unique([userId, organizationId]) // لا يمكن للمستخدم الانضمام لنفس المنظمة مرتين\n}\n\nmodel Invitation {\n  id        String           @id @default(cuid())\n  email     String\n  role      Role             @default(MEMBER)\n  status    InvitationStatus @default(PENDING)\n  expiresAt DateTime\n  createdAt DateTime         @default(now())\n\n  // --- العلاقات ---\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  organizationId String\n  invitedBy      User         @relation(\"UserInvitations\", fields: [invitedById], references: [id])\n  invitedById    String\n\n  @@unique([email, organizationId]) // لا يمكن دعوة نفس البريد الإلكتروني مرتين لنفس المنظمة\n}\n\n// ========================================\n// 2. النماذج الأساسية للفحص\n// ========================================\n\nmodel Target {\n  id        String   @id @default(cuid())\n  url       String\n  name      String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // --- العلاقات ---\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  organizationId String\n  scans          Scan[]\n\n  @@unique([url, organizationId]) // لا يمكن إضافة نفس الهدف مرتين في نفس المنظمة\n}\n\nmodel Scan {\n  id          String     @id @default(cuid())\n  status      ScanStatus @default(PENDING)\n  startedAt   DateTime?\n  completedAt DateTime?\n  createdAt   DateTime   @default(now())\n\n  // --- العلاقات ---\n  target          Target             @relation(fields: [targetId], references: [id], onDelete: Cascade)\n  targetId        String\n  vulnerabilities Vulnerability[]\n  report          Report? // الفحص الواحد يمكن أن يكون له تقرير واحد\n  configuration   ScanConfiguration? @relation(fields: [configurationId], references: [id])\n  configurationId String?\n}\n\nmodel Vulnerability {\n  id          String   @id @default(cuid())\n  type        String // \"XSS\", \"SQL Injection\"\n  severity    Severity @default(MEDIUM)\n  description String   @db.Text\n  proof       String   @db.Text // دليل الإثبات (قد يكون طويلاً)\n  isResolved  Boolean  @default(false)\n  foundAt     DateTime @default(now())\n\n  // --- العلاقات ---\n  scan   Scan   @relation(fields: [scanId], references: [id], onDelete: Cascade)\n  scanId String\n}\n\nmodel ScanConfiguration {\n  id                 String  @id @default(cuid())\n  name               String // \"Full Scan\", \"Quick XSS Check\"\n  isDiscoveryFocused Boolean @default(true)\n  isAiPowered        Boolean @default(true)\n  // يمكن إضافة المزيد من إعدادات الفحص هنا\n\n  scans Scan[]\n}\n\n// ========================================\n// 3. نماذج التقارير والتكامل\n// ========================================\n\nmodel Report {\n  id          String   @id @default(cuid())\n  format      String // \"PDF\", \"JSON\", \"HTML\"\n  storagePath String // مسار تخزين الملف (مثل S3 URL)\n  createdAt   DateTime @default(now())\n\n  // --- العلاقات ---\n  scan           Scan         @relation(fields: [scanId], references: [id])\n  scanId         String       @unique // كل تقرير مرتبط بفحص واحد فقط\n  organization   Organization @relation(fields: [organizationId], references: [id])\n  organizationId String\n}\n\nmodel ApiToken {\n  id          String    @id @default(cuid())\n  name        String\n  token       String    @unique // التوكن الفعلي المشفر\n  permissions String[] // صلاحيات التوكن\n  lastUsedAt  DateTime?\n  expiresAt   DateTime?\n  createdAt   DateTime  @default(now())\n\n  // --- العلاقات ---\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  organizationId String\n}\n\n// ========================================\n// 4. نماذج الأمان والتدقيق\n// ========================================\n\nmodel AuditLog {\n  id        String   @id @default(cuid())\n  action    String // مثل \"user.login\", \"target.create\"\n  details   Json // تفاصيل إضافية كـ JSON\n  ipAddress String?\n  createdAt DateTime @default(now())\n\n  // --- العلاقات ---\n  user           User         @relation(fields: [userId], references: [id])\n  userId         String\n  organization   Organization @relation(fields: [organizationId], references: [id])\n  organizationId String\n}\n\n// ========================================\n// التعدادات (Enums)\n// ========================================\n\nenum Role {\n  ADMIN\n  MEMBER\n  BILLING_MANAGER\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  EXPIRED\n}\n\nenum ScanStatus {\n  PENDING\n  QUEUED\n  RUNNING\n  COMPLETED\n  FAILED\n  CANCELED\n}\n\nenum Severity {\n  INFO\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n",
  "inlineSchemaHash": "6b5f947589873fd9d40c7293ebb8a6925326617b8372c0dedbf76d120c1f2213",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"memberships\",\"kind\":\"object\",\"type\":\"Membership\",\"relationName\":\"MembershipToUser\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"UserInvitations\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":null},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Membership\",\"relationName\":\"MembershipToOrganization\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"targets\",\"kind\":\"object\",\"type\":\"Target\",\"relationName\":\"OrganizationToTarget\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"OrganizationToReport\"},{\"name\":\"apiTokens\",\"kind\":\"object\",\"type\":\"ApiToken\",\"relationName\":\"ApiTokenToOrganization\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToOrganization\"}],\"dbName\":null},\"Membership\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MembershipToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MembershipToOrganization\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invitedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserInvitations\"},{\"name\":\"invitedById\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Target\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToTarget\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scans\",\"kind\":\"object\",\"type\":\"Scan\",\"relationName\":\"ScanToTarget\"}],\"dbName\":null},\"Scan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ScanStatus\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"target\",\"kind\":\"object\",\"type\":\"Target\",\"relationName\":\"ScanToTarget\"},{\"name\":\"targetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vulnerabilities\",\"kind\":\"object\",\"type\":\"Vulnerability\",\"relationName\":\"ScanToVulnerability\"},{\"name\":\"report\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToScan\"},{\"name\":\"configuration\",\"kind\":\"object\",\"type\":\"ScanConfiguration\",\"relationName\":\"ScanToScanConfiguration\"},{\"name\":\"configurationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Vulnerability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"Severity\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proof\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isResolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"foundAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scan\",\"kind\":\"object\",\"type\":\"Scan\",\"relationName\":\"ScanToVulnerability\"},{\"name\":\"scanId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ScanConfiguration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDiscoveryFocused\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isAiPowered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"scans\",\"kind\":\"object\",\"type\":\"Scan\",\"relationName\":\"ScanToScanConfiguration\"}],\"dbName\":null},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storagePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scan\",\"kind\":\"object\",\"type\":\"Scan\",\"relationName\":\"ReportToScan\"},{\"name\":\"scanId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToReport\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"ApiToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ApiTokenToOrganization\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"AuditLogToOrganization\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

